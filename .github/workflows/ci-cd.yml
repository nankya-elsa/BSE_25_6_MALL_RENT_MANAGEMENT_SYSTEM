name: CI/CD Pipeline

on:
  push:
    branches:
      #- ci-cd-pipeline # Your branch name
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job 1: Backend Tests
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        working-directory: ./backend
        env:
          SECRET_KEY: test-secret-key
          DEBUG: True
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
        run: |
          python manage.py test

  # Job 2: Frontend Tests
  frontend-test:
    name: Frontend Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run tests
        working-directory: ./frontend
        run: npm test

  # Job 3: Build Frontend
  frontend-build:
    name: Build Frontend
    needs: [backend-test, frontend-test]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Build
        working-directory: ./frontend
        env:
          VITE_API_URL: https://mall-rent-management-system-backend.onrender.com
        run: npm run build

  # Job 4: Deploy Notification
  deploy-success:
    name: Deployment Ready
    needs: [backend-test, frontend-test, frontend-build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/ci-cd-pipeline'

    steps:
      - name: Deployment notification
        run: |
          echo "âœ… All tests passed!"
          echo "âœ… Build successful!"
          echo "ðŸš€ Render will auto-deploy from branch: ${{ github.ref_name }}"
